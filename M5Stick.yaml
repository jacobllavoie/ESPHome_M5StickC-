substitutions:
  devicename: m5stickc
  upper_devicename: M5StickC

esphome:
  name: $devicename
  friendly_name: m5stickc+
  platformio_options:
    upload_speed: 115200

esp32:
  board: m5stick-c
  framework:
    type: esp-idf

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "API ENCRYPTION KEY"

ota:
  password: "OTA PASSWORD"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "M5StickC Fallback Hotspot"
    password: "FALLBACK AP PASSWORD"

captive_portal:

web_server:

external_components:
  - source:
      type: git
      url: https://github.com/airy10/esphome-m5stickC/
    components: [ axp192 ]
  - source: github://pr#4105
    components: [ display_menu_base, graphical_display_menu, display, graph] #font ]

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO37
      inverted: true
    name: ${upper_devicename} Button A
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
    on_press:
      then:
        - display_menu.enter:
#    on_release:
#      then:
#        - light.turn_off: led1
        
  - platform: gpio
    pin:
      number: GPIO39
      inverted: true
    name: ${upper_devicename} Button B
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
    on_press:
      - display_menu.down:

# AXP192 power management - must be present to initialize TFT power on
sensor:
  - platform: axp192
    address: 0x34
    i2c_id: bus_a
    update_interval: 30s
    battery_level:
      name: "M5Stick Battery Level"
      id: "m5stick_batterylevel"

  - platform: wifi_signal
    name: ${upper_devicename} WiFi Signal
    id: wifi_dbm
  - platform: uptime
    name: ${upper_devicename} Uptime
    id: m5stick_uptime

# internal LED
light:
  - platform: monochromatic
    output:  builtin_led
    name: ${upper_devicename} Led
    id: led1


output:
  - platform: ledc
    pin: 10
    inverted: true
    id: builtin_led

# internal IR Transmitter
remote_transmitter:
  - pin:
      number: GPIO9
    carrier_duty_percent: 50%
    id: my_internal_transmitter

spi:
  clk_pin: GPIO13
  mosi_pin: GPIO15

i2c:
   - id: bus_a
     sda: GPIO21
     scl: GPIO22
     scan: True

# builtin 135x240 TFT
display:
  - platform: st7789v
    model: TTGO TDisplay 135x240
    cs_pin: GPIO5
    dc_pin: GPIO23
    reset_pin: GPIO18
    rotation: 270
    id: my_display
    pages:
      - id: menu_page
        lambda: |-
          it.printf(0, 0, id(font1), "Battery: %.1f, WiFi: %.0f dBm, Uptime: %.1f s", id(m5stick_batterylevel).state, id(wifi_dbm).state, id(m5stick_uptime).state);

          const auto display_width = it.get_width();
          const auto display_height = it.get_height();

          const auto font_height = 20;
          it.menu(0, font_height, id(my_menu), display_width , display_height - font_height);

font:
  - file: 'arial.ttf'
    id: font1
    size: 12

  - file: 'arial.ttf'
    id: font2
    size: 36

  - file: 'arial.ttf'
    id: font3
    size: 20

graphical_display_menu:
  id: my_menu
  display: my_display
  # Optional: You'll want this to trigger the drawing of the lambda
  on_redraw:
    then:
      component.update: my_display
  font: font3
  active: true
  mode: rotary
  on_enter:
    then:
      lambda: 'ESP_LOGI("display_menu", "root enter");'
  on_leave:
    then:
      lambda: 'ESP_LOGI("display_menu", "root leave");'
  items:
    - type: menu
      text: 'Lights'
      on_enter:
        then:
          lambda: 'ESP_LOGI("display_menu", "Enter Lights Menu");'
      on_leave:
        then:
          lambda: 'ESP_LOGI("display_menu", "Leave Lights Menu");'
      items:
        - type: menu
          text: 'All Lights'
          on_enter:
            then:
              lambda: 'ESP_LOGI("display_menu", "Enter All Lights Menu");'
          on_leave:
            then:
              lambda: 'ESP_LOGI("display_menu", "Leave All Lights Menu");'
          items:
            - type: switch
              text: 'Toggle All Lights'
              switch: all_lights
            - type: back
              text: Back

        - type: menu
          text: 'Living Room'
          on_enter:
            then:
              lambda: 'ESP_LOGI("display_menu", "Enter Living Room Lights Menu");'
          on_leave:
            then:
              lambda: 'ESP_LOGI("display_menu", "Leave Living Room Lights Menu");'
          items:
            - type: switch
              text: 'Toggle Living Room Light'
              switch: living_room_light
            - type: back
              text: Back

        - type: menu
          text: 'Patio'
          on_enter:
            then:
              lambda: 'ESP_LOGI("display_menu", "Enter Patio Lights Menu");'
          on_leave:
            then:
              lambda: 'ESP_LOGI("display_menu", "Leave Patio Lights Menu");'
          items:
            - type: switch
              text: 'Toggle Patio Light'
              switch: patio_light
            - type: back
              text: Back
#    - type: switch
#      text: "Shutdown"
#      switch: m5stick_shutdown
    - type: command
      text: 'Show Main'
      on_value:
        then:
          - display_menu.show_main:

switch:
  - platform: template
    name: 'All Lights'
    id: all_lights
    optimistic: True
    on_turn_on:
      then:
        - homeassistant.service:
            service: light.turn_on
            data:
              entity_id: light.all
    on_turn_off:
      then:
        - homeassistant.service:
            service: light.turn_off
            data:
              entity_id: light.all

  - platform: template
    name: 'Living Room Light'
    id: living_room_light
    optimistic: True
    on_turn_on:
      then:
        - homeassistant.service:
            service: light.turn_on
            data:
              entity_id: light.living_room
    on_turn_off:
      then:
        - homeassistant.service:
            service: light.turn_off
            data:
              entity_id: light.living_room

  - platform: template
    name: 'Patio Light'
    id: patio_light
    optimistic: True
    on_turn_on:
      then:
        - homeassistant.service:
            service: light.turn_on
            data:
              entity_id: light.patio
    on_turn_off:
      then:
        - homeassistant.service:
            service: light.turn_off
            data:
              entity_id: light.patio
              
#  - platform: shutdown
#    name: "M5Stick Shutdown"
#    id: m5stick_shutdown
time:
  - platform: homeassistant
    id: homeassistant_time
  - platform: sntp
    id: sntp_time
